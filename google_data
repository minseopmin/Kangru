from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
import time
from time import sleep
from selenium.webdriver import ActionChains
from selenium.webdriver.common.actions.wheel_input import ScrollOrigin
from selenium.webdriver.common.keys import Keys
import pandas as pd

s = Service('./chromedriver.exe')
driver = webdriver.Chrome(service=s)
title_list=[]
score_list=[]
comment_list=[]
adder_list=[]



def scroll_to_element(driver,keyword):
    search_word=keyword
    driver.get("https://www.google.com/maps/")
    searchbox = driver.find_element(By.CSS_SELECTOR,"input#searchboxinput")
    searchbox.send_keys(search_word)
    searchbutton = driver.find_element(By.CSS_SELECTOR,"button#searchbox-searchbutton")
    searchbutton.click()
    
    time.sleep(3)
    number_of_elements_found = 0
    while True:
        els = driver.find_elements(By.CSS_SELECTOR, '.TFQHme')
        if number_of_elements_found == len(els):
            print("데이터 스크롤 완료 완료.")
            # Reached the end of loadable elements
            break

        try:
            driver.execute_script("arguments[0].scrollIntoView();", els[-1])
            time.sleep(5)
            number_of_elements_found = len(els)
            print(number_of_elements_found)

        except StaleElementReferenceException:
            # Possible to get a StaleElementReferenceException. Ignore it and retry.
            pass

        
scroll_to_element(driver,"명동 떡볶이")

time.sleep(3)
stores = driver.find_elements(By.CSS_SELECTOR,"div.CpccDe")


for s in stores:
    # 가게 이름 데이터 수집 // h3.section-result-title
    title = s.find_element(By.CSS_SELECTOR,"div.qBF1Pd.fontHeadlineSmall").text

    # 평점 데이터 수집 // span.cards-rating-score
    # 평점이 없는 경우 에러 처리
    try:
        score = s.find_element(By.CSS_SELECTOR,"span.MW4etd").text
    except:
         score = "평점없음"

    # 가게 댓글 수 수집 // span.section-result-location
    try:
        comment = s.find_element(By.CSS_SELECTOR,"span.UY7F9").text
    except:
        comment = "(0)"

    # 가게 주소 데이터 수집 // span.section-result-location
    addr = s.find_element(By.XPATH,"/html/body/div[3]/div[9]/div[9]/div/div/div[1]/div[2]/div/div[1]/div/div/div[2]/div[1]/div[7]/div/div/div[4]/div[1]/div/div/div[2]/div[4]/div[1]/span[2]/jsl/span[2]").text
    
    title_list.append(title)
    score_list.append(score)
    comment_list.append(comment)
    adder_list.append(addr)
    
Google_data = pd.DataFrame({'Store':title_list,'score':score_list,'comment':comment_list,'adder':adder_list})
print(Google_data)
